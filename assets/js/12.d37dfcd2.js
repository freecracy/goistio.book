(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{215:function(a,s,t){"use strict";t.r(s);var e=t(0),r=Object(e.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"创建最小go镜像"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建最小go镜像"}},[a._v("#")]),a._v(" 创建最小go镜像")]),a._v(" "),t("h2",{attrs:{id:"二进制打包"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二进制打包"}},[a._v("#")]),a._v(" 二进制打包")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("// 二进制打包\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("GOOS")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("linux "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("CGO_ENABLED")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(" go build -ldflags"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"-s -w"')]),a._v(" -o app app \n")])])]),t("h2",{attrs:{id:"dockerfile"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dockerfile"}},[a._v("#")]),a._v(" dockerfile")]),a._v(" "),t("div",{staticClass:"language-dockerfile extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('FROM scratch\nADD app /\nCMD ["/app"]\n')])])]),t("h2",{attrs:{id:"docker多阶段构建"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker多阶段构建"}},[a._v("#")]),a._v(" docker多阶段构建")]),a._v(" "),t("h2",{attrs:{id:"编译参数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#编译参数"}},[a._v("#")]),a._v(" 编译参数")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("CGO_ENABLED")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 完全静态编译,不会再依赖动态库")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 默认情况下net会用静态链接库,libc")]),a._v("\ngo build -tags netgo -a -v "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 编译时用纯go的net")]),a._v("\n-extldflags "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"-static"')]),a._v("\n")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);