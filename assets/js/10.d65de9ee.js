(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{213:function(t,a,s){"use strict";s.r(a);var e=s(0),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"channel"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#channel"}},[t._v("#")]),t._v(" channel")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// runtime/chan.go")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" hchan "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tqcount   "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint")]),t._v("           "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// total data in the queue")]),t._v("\n\tdataqsiz "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint")]),t._v("           "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// size of the circular queue")]),t._v("\n\tbuf      unsafe"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Pointer "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// points to an array of dataqsiz elements")]),t._v("\n\telemsize "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint16")]),t._v("\n\tclosed   "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint32")]),t._v("\n\telemtype "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("_type "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// element type")]),t._v("\n\tsendx    "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// send index")]),t._v("\n\trecvx    "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// receive index")]),t._v("\n\trecvq    waitq  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// list of recv waiters")]),t._v("\n\tsendq    waitq  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// list of send waiters")]),t._v("\n\tlock mutex "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 发送接收数据都会加锁")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 每一步操作都加锁,把数据从goroutine复制到循环链表,或数据从循环链表复制到goroutine")]),t._v("\n")])])]),s("p",[s("img",{attrs:{src:"https://tva1.sinaimg.cn/large/006tNbRwly1gaepw14mw9j31h80u0kjl.jpg",alt:"image-20191230140722855"}})]),t._v(" "),s("h2",{attrs:{id:"锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#锁"}},[t._v("#")]),t._v(" 锁")]),t._v(" "),s("p",[t._v("cas或轮询")]),t._v(" "),s("p",[t._v("公平锁、非公平锁:在锁获取过程中是否先进行锁获取的线程更先获得锁")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Mutex "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tstate "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int32")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 锁计数")]),t._v("\n\tsema  "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint32")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 排队")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 锁三种状态")]),t._v("\nmutexLocked "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("iota")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// mutex is locked")]),t._v("\nmutexWoken\nmutexStarving\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 正在等待获取锁的goroutine数量")]),t._v("\nmutexWaiterShift\n")])])]),s("h3",{attrs:{id:"加锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#加锁"}},[t._v("#")]),t._v(" 加锁")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://tva1.sinaimg.cn/large/006tNbRwly1gaeqtyr6laj31i80u04qp.jpg",alt:"image-20191230144208324"}})]),t._v(" "),s("h3",{attrs:{id:"释放锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#释放锁"}},[t._v("#")]),t._v(" 释放锁")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://tva1.sinaimg.cn/large/006tNbRwly1gaeqvjmajvj31xy0huwr4.jpg",alt:"image-20191230144341928"}})]),t._v(" "),s("h2",{attrs:{id:"内存分配"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内存分配"}},[t._v("#")]),t._v(" 内存分配")]),t._v(" "),s("ol",[s("li",[t._v("每次从操作系统申请一大块儿的内存,由Go来对这块儿内存做分配,减少系统调用")]),t._v(" "),s("li",[t._v("内存分配算法采用Google的TCMalloc算法,核心思想就是把内存切分的非常的细小,分为多级管理,以降低锁的粒度。")]),t._v(" "),s("li",[t._v("回收对象内存时,并没有将其真正释放掉,只是放回预先分配的大块内存中,以便复用,只有内存闲置过多的时候,才会尝试归还部分内存给操作系统,降低整体开销")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://tva1.sinaimg.cn/large/006tNbRwly1gaer28xvidj318y0u0b29.jpg",alt:"image-20191230145006613"}})]),t._v(" "),s("p",[t._v("spans和bitmap的大小会随着heap的改变而改变")]),t._v(" "),s("h3",{attrs:{id:"arena"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#arena"}},[t._v("#")]),t._v(" arena")]),t._v(" "),s("p",[t._v("arena区域就是我们通常所说的heap.heap中按照管理和使用两个维度:")]),t._v(" "),s("ol",[s("li",[t._v("管理分配⻆度,由多个连续的⻚(page)组成的大块内存")]),t._v(" "),s("li",[t._v('使用⻆度出发，就是平时咱们所了解的:heap中存在很多"对象“')])]),t._v(" "),s("p",[t._v("此区域存放了mspan的指针.spans区域用于表示arena区中的某一⻚(page)属于哪个mspan 。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://tva1.sinaimg.cn/large/006tNbRwly1gaer9ebukkj317s0u0dzi.jpg",alt:"image-20191230145700859"}})]),t._v(" "),s("p",[t._v("mspan 可以说是go内存管理的最基本单元，但是内存的使用最终还是要落脚 到“对象”上。 mspan 和对象是什么关系呢? 其实“对象”肯定也放到 page 中，毕竟 page 是内存存储的基本单元。")]),t._v(" "),s("p",[t._v("对象分配的时候，根据对象的大小选择大小相近的 span ，这样，碎片问题 就解决了。")]),t._v(" "),s("h3",{attrs:{id:"内存碎片"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内存碎片"}},[t._v("#")]),t._v(" 内存碎片")]),t._v(" "),s("p",[t._v("按需分配。go将内存块分为大小不同的67种，然后再把 这67种大内存块，逐个分为小块(可以近似理解为大小不同的相当于 page )称 之为 span (连续的 page )，在go语言中就是上文提及的 mspan 。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://tva1.sinaimg.cn/large/006tNbRwly1gaerbqm9vqj31xe0qudva.jpg",alt:"image-20191230145916347"}})]),t._v(" "),s("p",[t._v("代码中一共有66种，还有一种特殊的span: 即对于大 于32k的对象出现时，会直接从heap分配一个特殊的span，这个特殊的span 的类型(class)是0, 只包含了一个大对象, span的大小由对象的大小决定")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://tva1.sinaimg.cn/large/006tNbRwly1gaerdwoiuoj31vw0u0gse.jpg",alt:"image-20191230150122581"}})]),t._v(" "),s("h2",{attrs:{id:"bitmap"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bitmap"}},[t._v("#")]),t._v(" bitmap")]),t._v(" "),s("p",[t._v("bitmap 主要的作用还是服务于GC")]),t._v(" "),s("p",[t._v("bitmap 有好几种:Stack, data, and bss bitmaps，再就是这次要说的 heap bitmaps 。 在此bitmap的做作用是标记标记 arena (即heap)中的对象。一是 的标记对应地址中是否存在对象，另外是标记此对象是否被gc标记过。一个 功能一个bit位，所以， heap bitmaps 用两个bit位。 bitmap区域中的一个 byte对应arena区域的四个指针大小的内存的结构如下")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://tva1.sinaimg.cn/large/006tNbRwly1gaerigofayj312j0u0gwv.jpg",alt:"image-20191230150544873"}})]),t._v(" "),s("p",[t._v("arena 中包含基本的管理单元和程序运行时候生成的对象或实体，这两部分 分别被 spans 和 bitmap 这两块非heap区域的内存所对应着")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://tva1.sinaimg.cn/large/006tNbRwly1gaerh5manjj315s0u0gue.jpg",alt:"image-20191230150429401"}})]),t._v(" "),s("p",[t._v("spans和bitmap都会根据arena的动态变化而动态调整大小。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://tva1.sinaimg.cn/large/006tNbRwly1gaerjf6z1xj31u50u0dp5.jpg",alt:"image-20191230150640517"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://tva1.sinaimg.cn/large/006tNbRwly1gaerjvhctoj31820u016r.jpg",alt:"image-20191230150705463"}})]),t._v(" "),s("p",[t._v("mspan 是双向链 表")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://tva1.sinaimg.cn/large/006tNbRwly1gaerl4vt9dj30nk12udmt.jpg",alt:"image-20191230150819286"}})]),t._v(" "),s("p",[t._v("mspan是go内存管理的基本单元,每一个g都会绑定一个mcache,各个g申请内存不存在锁竞争.")])])}),[],!1,null,null,null);a.default=n.exports}}]);