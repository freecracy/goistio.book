(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{218:function(i,t,s){"use strict";s.r(t);var e=s(0),o=Object(e.a)({},(function(){var i=this,t=i.$createElement,s=i._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":i.$parent.slotKey}},[s("h1",{attrs:{id:"istio简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#istio简介"}},[i._v("#")]),i._v(" istio简介")]),i._v(" "),s("p",[i._v("istio项目分布在几个不同的仓库.")]),i._v(" "),s("ul",[s("li",[i._v("istio/istio.这个是主仓库,他拥有istio的核心组件和,示例程序,和各种文档,包括\n"),s("ul",[s("li",[i._v("security.这个目录包含安全相关的代码.包括including Citadel (acting as Certificate Authority), citadel agent, etc.")]),i._v(" "),s("li",[i._v("pilot.这个目录包含制定平台的代码.当应用拓扑结构改变的时候动态的识别代理,同时转发代理路由规则到指定的代理.")]),i._v(" "),s("li",[i._v("istioctl.这个目录包含命令行套件.")]),i._v(" "),s("li",[i._v("mixer.这个目录确保通过代理转发的各种策略和收集代理和服务的监控数据.这里有各种云平台插件接口,服务管理,服务监控.")])])]),i._v(" "),s("li",[i._v("istio/api.这个仓库定义里组件界别的api,和istio平台通用的配置格式.允许待机将实施决策交给mixer.")]),i._v(" "),s("li",[i._v("istio/proxy.这个代理包含envoy代理的扩展.")])])])}),[],!1,null,null,null);t.default=o.exports}}]);